{"version":3,"sources":["redux/actions.js","configs/data.js","components/Currency.js","components/Navbar.js","components/Price.js","components/Item.js","components/ItemsList.js","components/FetchBoughtList.js","components/FetchReceivedList.js","components/StoreItem.js","components/StoresList.js","components/FetchBoughtStore.js","components/FetchReceivedStore.js","components/Tabs.js","templates/MainTemplate.js","components/AddItemForm.js","pages/BoughtItemsPage.js","pages/ReceivedItemsPage.js","App.js","redux/reducers/receivedItemsReducer.js","redux/reducers/listItemsReducer.js","redux/reducers/currencyReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_ITEM","RECEIVE_ITEM","UPDATE_CURRENCY","REMOVE_ITEM","configRoutes","content","value","Currency","useState","setCurrency","dispatch","useDispatch","useEffect","interval","setInterval","fetch","then","response","json","data","rates","ILS","currency","type","payload","updateCurrency","catch","error","alert","clearInterval","Navbar","history","useHistory","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","target","innerText","push","handleClose","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","currentTarget","Typography","variant","id","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Price","props","convertedPrice","parseInt","itemPrice","toFixed","text","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","padding","margin","Item","location","useLocation","classes","useSelector","state","Paper","className","Grid","container","spacing","item","xs","sm","direction","gutterBottom","itemName","itemOnlineStore","itemDeliveryDate","pathname","Button","removeItem","ItemsList","items","sort","a","b","Date","undefined","map","FetchBoughtList","list","listItems","FetchReceivedList","received","receivedItems","StoreItem","itemsSumPrice","GroupByStoreSum","storeItems","storeComponents","obj","groupByParamKey","sumParamkey","reduce","result","groupBy","Object","entries","key","sum","StoresList","FetchBoughtStore","FetchReceivedStore","TabPanel","Tabsbar","setValue","Tabs","onChange","newValue","indicatorColor","textColor","centered","Tab","label","MainTemplate","children","AddItemForm","setItemName","setItemOnlineStore","setItemPrice","setitemDeliveryDate","isItemNameInvalid","setIsItemNameInvalid","isItemOnlineStoreInvalid","setIsItemOnlineStoreInvalid","isItemPriceInvalid","setIsItemPriceInvalid","isItemDeliveryDate","setIsItemDeliveryDateInvalid","onSubmit","e","preventDefault","uuid","style","TextField","helperText","InputProps","endAdornment","InputAdornment","InputLabelProps","shrink","BoughtItemsPage","ReceivedList","App","basename","exact","path","render","ReceivedItemsPage","RECEIVED_OBJ","receivedItemsReducer","action","newReceivedItems","ITEMS_OBJ","listItemsReducer","newItems","filter","CURRENCY_OBJ","currencyReducer","reducer","combineReducers","configStorage","storage","whitelist","persistReducer","store","createStore","rootReducer","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fc771560.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\nexport const RECEIVE_ITEM = \"RECEIVE_ITEM\";\nexport const SAVE_SELECTED = 'SAVE_SELECTED'\nexport const UPDATE_CURRENCY = \"UPDATE_CURRENCY\";\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\n\nexport function addItem(item){\n    return{\n        type: ADD_ITEM,\n        payload: item\n    }\n}\n\nexport function recieveItem(item){\n    return{\n        type: RECEIVE_ITEM,\n        payload: item\n    }\n}\n\nexport function removeItem(item){\n    return{\n        type: REMOVE_ITEM,\n        payload: item\n    }\n}\n\nexport function saveSelected(value){\n    return { \n        type: SAVE_SELECTED,\n         value\n    }\n}\n\nexport function updateCurrency(currency){\n    return{\n        type: UPDATE_CURRENCY,\n        payload: currency\n    }\n}","export const configRoutes = {\n    paths: [{\n      content: 'Bought Items',\n      value: 'list'\n    }, {\n      content: 'Received List',\n      value: 'Received'\n    }],\n  };\n\nexport const INTERVAL_MS = 10000;\n\nexport const CURRENCY_URL = 'https://api.exchangeratesapi.io/latest?symbols=ILS&base=USD';\n","import { updateCurrency } from '../redux/actions';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { INTERVAL_MS } from '../configs/data';\nimport { CURRENCY_URL } from '../configs/data';\n\nfunction Currency(){\n  const [currency, setCurrency] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n        fetch(CURRENCY_URL)\n        .then(response => response.json())\n        .then(data => {\n            setCurrency(data.rates.ILS);\n            dispatch(updateCurrency(\n              {\n                currency : data.rates.ILS\n              }\n            ))\n        }).catch(error => {\n          alert('There was a problem loading the currency');\n      });\n      return false;\n    }, INTERVAL_MS );\n    return () => clearInterval(interval); \n  }, [])\n  return (\n    []\n  );\n    }\n  \n  export default Currency;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router-dom';\nimport { configRoutes } from '../configs/data';\n\nfunction Navbar() {\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = (event) => {\n    switch(event.target.innerText){\n      case configRoutes.paths[0].content:\n        history.push(`/${configRoutes.paths[0].value}`);\n        break;\n      case configRoutes.paths[1].content:\n        history.push(`/${configRoutes.paths[1].value}`);\n        break;\n      default:\n        history.push(`/${configRoutes.paths[0].value}`);\n    }\n    handleClose();\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleMenu}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Shopping Tracking\n          </Typography>\n          <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n              >\n                <MenuItem onClick={handleClick} value={configRoutes.paths[0].value}>{configRoutes.paths[0].content}</MenuItem>\n                <MenuItem onClick={handleClick} value={configRoutes.paths[1].value}>{configRoutes.paths[1].content}</MenuItem>\n              </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default Navbar;","import React from 'react';\nimport { Typography} from '@material-ui/core';\n\n\nfunction Price(props){\n    const convertedPrice = (parseInt(props.itemPrice) * props.currency).toFixed(2) ;\n    return (\n        <Typography variant=\"subtitle1\">{props.text} {props.itemPrice}$ / { convertedPrice }₪</Typography>\n        );\n    }\n  \n  export default Price;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { recieveItem, removeItem } from '../redux/actions';\nimport { Paper, Grid, Typography, Button} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Price from './Price';\nimport {useLocation} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { configRoutes } from '../configs/data';\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    padding: '1.5rem',\n    margin: '1rem 3rem 0rem 3rem',\n  },\n});\n\nfunction Item({props}){\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const classes = useStyles();\n\n    let currency = useSelector(state => state.currency).currency.currency;\n\n    return (\n      <div>\n      <Paper className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  Name:{props.itemName}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom color=\"textSecondary\">\n                  Store:{props.itemOnlineStore}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Delivery Date:{props.itemDeliveryDate}\n                </Typography>\n              </Grid>\n              <Grid item>\n              {location.pathname === \"/\"+configRoutes.paths[0].value ? \n              <Button variant=\"contained\" onClick={()=>{dispatch(recieveItem(props)); dispatch(removeItem(props))}}>Mark as received</Button>\n              : []\n                }   \n              </Grid>\n            </Grid>\n            <Grid item>\n              <Price itemPrice={props.itemPrice} currency={currency} text={'Price:'}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      </div>\n      );\n    }\n  \n  export default Item;","import React from 'react';\nimport Item from './Item';\n\nfunction ItemsList(props){\n  let items = props.items\n\n  if(items != [])\n     items = items.sort((a, b) => new Date(b.itemDeliveryDate) - new Date(a.itemDeliveryDate));\n\n    return (\n        <div>\n        {items !== undefined ? items.map(item => {\n           return <Item key={item.id} props={item}/>\n        }) : []}\n    </div>\n      );\n    }\n  \n  export default ItemsList;","import React from 'react';\nimport ItemsList from './ItemsList';\nimport { useSelector } from 'react-redux';\n\nfunction FetchBoughtList(props){\n  let items = useSelector(state => state.list).listItems;\n    return (\n        <ItemsList items={items}/>\n      );\n    }\n  \n  export default FetchBoughtList;","import React from 'react';\nimport ItemsList from './ItemsList';\nimport { useSelector } from 'react-redux';\n\nfunction FetchReceivedList(){\n  let items = useSelector(state => state.received).receivedItems;\n    return (\n        <ItemsList items={items}/>\n      );\n    }\n  \n  export default FetchReceivedList;","import React from 'react';\nimport { Paper, Grid, Typography,} from '@material-ui/core';\nimport Price from './Price';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n      background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n      color: 'white',\n      padding: '1.5rem',\n      margin: '1rem 3rem 0rem 3rem',\n    },\n  });\n\nfunction StoreItem({props}){\n    let currency = useSelector(state => state.currency).currency.currency;\n    const classes = useStyles();\n\n    return (\n      <div>\n <Paper className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                    <Typography variant=\"body2\" gutterBottom>\n                    Store:{props.itemOnlineStore}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Price itemPrice={props.itemsSumPrice} currency={currency} text={'Total Sum:'}/>\n                </Grid>\n            </Grid>\n         </Grid>\n         </Grid>\n      </Paper>\n      </div>\n      );\n    }\n  \n  export default StoreItem;","import React from 'react';\nimport StoreItem from './StoreItem';\n\nfunction GroupByStoreSum(storeItems){\n    const groupBy = (storeItems, groupByParamKey, sumParamkey) => storeItems.reduce(\n        (result, item) => ({\n          ...result,\n          [item[groupByParamKey]]: [\n            ...(result[item[groupByParamKey]] || []),\n            parseInt(item[sumParamkey]),\n          ],\n        }), \n        {},\n    );\n\n    let storeComponents = [];\n    let obj = groupBy(storeItems, \"itemOnlineStore\", \"itemPrice\");\n    for (const [key, value] of Object.entries(obj)) {\n        let sum = value.reduce((a, b) => a + b, 0);\n        storeComponents.push(<StoreItem key={key} props={{itemOnlineStore:key,itemsSumPrice:sum}}/>);\n      }\n    return storeComponents;\n}\nfunction StoresList(props){\n    return (\n        <div>\n             {props.items? GroupByStoreSum(props.items) : []}\n        </div>\n      );\n    }\n  \n  export default StoresList;","import React from 'react';\nimport StoresList from './StoresList';\nimport { useSelector } from 'react-redux';\n\n\nfunction FetchBoughtStore(props){\n  let items = useSelector(state => state.list).listItems;\n\n    return (\n        <StoresList items={items}/>\n      );\n    }\n  \n  export default FetchBoughtStore;","import React from 'react';\nimport StoresList from './StoresList';\nimport { useSelector } from 'react-redux';\n\nfunction FetchReceivedStore(props){\n  let items = useSelector(state => state.received).receivedItems;\n    return (\n        <StoresList items={items}/>\n      );\n    }\n  \n  export default FetchReceivedStore;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FetchBoughtList from './FetchBoughtList';\nimport FetchReceivedList from './FetchReceivedList';\nimport FetchBoughtStore from './FetchBoughtStore';\nimport FetchReceivedStore from './FetchReceivedStore';\nimport {useLocation} from 'react-router-dom';\nimport { configRoutes } from '../configs/data';\n\nfunction TabPanel(props) {\n  switch(props.value){\n    case 0:\n      if(props.location.pathname == \"/\"+configRoutes.paths[0].value)\n        return <FetchBoughtList {...props}/>\n      else if (props.location.pathname == \"/\"+configRoutes.paths[1].value)\n        return <FetchReceivedList {...props}/>\n    case 1:\n      if(props.location.pathname == \"/\"+configRoutes.paths[0].value)\n        return <FetchBoughtStore {...props}/>\n      else if (props.location.pathname == \"/\"+configRoutes.paths[1].value)\n        return <FetchReceivedStore {...props}/>\n  }\n}\n\nfunction Tabsbar() {\n  const [value, setValue] = React.useState(0);\n  const location = useLocation();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab label=\"Items List\" />\n        <Tab label=\"Stores List\" />\n      </Tabs>\n      <TabPanel value={value} location={location}/>  \n    </div>\n  );\n}\nexport default Tabsbar;","import React from 'react';\nimport Navbar from '../components/Navbar';\nimport Tabs from '../components/Tabs';\n\n\nconst MainTemplate = props => {\n  return (\n    <div>\n      <Navbar {...props} />\n      <div className=\"main\">\n        {props.children}\n      </div>\n      <Tabs {...props} />\n\n    </div>\n  );\n};\n\nexport default MainTemplate;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport {v1 as uuid} from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../redux/actions';\n\nfunction AddItemForm(){\n\n  const [itemName, setItemName] = useState(\"\");\n  const [itemOnlineStore, setItemOnlineStore] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemDeliveryDate, setitemDeliveryDate] = useState(\"\");\n  const [isItemNameInvalid, setIsItemNameInvalid] = useState(false);\n  const [isItemOnlineStoreInvalid, setIsItemOnlineStoreInvalid] = useState(false);\n  const [isItemPriceInvalid, setIsItemPriceInvalid] = useState(false);\n  const [isItemDeliveryDate, setIsItemDeliveryDateInvalid] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const clearForm = () => {\n    setItemName(\"\");\n    setItemOnlineStore(\"\");\n    setItemPrice(\"\");\n    setitemDeliveryDate(\"\");\n  };\n  \n  const validate = () => {\n    itemName !== \"\" ? setIsItemNameInvalid(false) : setIsItemNameInvalid(true);\n    itemOnlineStore !== \"\" ? setIsItemOnlineStoreInvalid(false) : setIsItemOnlineStoreInvalid(true);\n    itemPrice !== \"\" ? setIsItemPriceInvalid(false) : setIsItemPriceInvalid(true);\n    itemDeliveryDate !== \"\" ? setIsItemDeliveryDateInvalid(false) : setIsItemDeliveryDateInvalid(true);\n  };\nconst isValid = () => {\n  return !isItemNameInvalid && !isItemOnlineStoreInvalid && !isItemPriceInvalid && !isItemDeliveryDate;\n}\n  return (\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault();\n        if (isValid()) {\n        dispatch(addItem(\n        {\n          id: uuid(),\n          itemName: itemName,\n          itemOnlineStore: itemOnlineStore,\n          itemPrice: itemPrice,\n          itemDeliveryDate: itemDeliveryDate      \n        }\n      ));\n      clearForm();}}}> \n            <Paper>\n              <div style={{padding: \"1.6rem\",margin: \"0.5rem\"}}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"item name\"\n                    onChange={e => setItemName(e.target.value)}\n                    error={isItemNameInvalid}\n                    helperText={isItemNameInvalid && \"item name required\"}\n                    value={itemName}\n                />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"online store\"\n                    onChange={e => setItemOnlineStore(e.target.value)}\n                    error={isItemOnlineStoreInvalid}\n                    helperText={isItemOnlineStoreInvalid && \"item name required\"}\n                    value={itemOnlineStore}\n                />\n                </Grid>\n                <Grid item xs={6}>\n                <TextField\n                    label=\"price\"\n                    type=\"number\"\n                    onChange={e => setItemPrice(e.target.value)}\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">$</InputAdornment>,\n                    }}\n                    error={isItemPriceInvalid}\n                    helperText={isItemPriceInvalid && \"item name required\"}\n                    value={itemPrice}\n                />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"delivery date\"\n                    type=\"date\"\n                    onChange={e => setitemDeliveryDate(e.target.value)}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    error={isItemDeliveryDate}\n                    helperText={isItemDeliveryDate && \"item name required\"}\n                    value={itemDeliveryDate}\n                />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={validate}\n                  >\n                     Add Item\n                  </Button>\n                </Grid>\n              </Grid>\n              </div>\n            </Paper>\n\n          </form>\n      </div>\n    );\n  }\n\nexport default AddItemForm;\n","import React from 'react';\nimport MainTemplate from '../templates/MainTemplate';\nimport AddItemForm from '../components/AddItemForm';\n\nfunction BoughtItemsPage(){\n    return (\n      <div>\n        <MainTemplate>\n            <AddItemForm />\n        </MainTemplate> \n      </div>\n      );\n    }\n  export default BoughtItemsPage;","import React from 'react';\nimport MainTemplate from '../templates/MainTemplate';\n\nfunction ReceivedList(){\n    return (\n      <div>\n          <MainTemplate>\n          </MainTemplate> \n      </div>\n      );\n    }\n  \n  export default ReceivedList;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Currency from './components/Currency';\nimport BoughtItemsPage from './pages/BoughtItemsPage';\nimport ReceivedItemsPage from './pages/ReceivedItemsPage';\nimport { configRoutes } from './configs/data';\nimport './styles.scss';\n\nfunction App(){\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/Shani-Lavan-08-03-2021/\">\n      <Switch>\n        <Route exact path={`/${configRoutes.paths[0].value}`} render={() => (\n          <BoughtItemsPage/>\n        )}\n        />\n\n        <Route exact path={`/${configRoutes.paths[1].value}`} render={() => (\n          <ReceivedItemsPage/>\n        )}\n        />\n      </Switch>\n      <Currency />\n\n      </BrowserRouter>\n    </div>\n    );\n  }\n\nexport default App;\n","import { RECEIVE_ITEM} from '../actions';\n\nconst RECEIVED_OBJ = {\n    receivedItems: [],\n  };\n\nconst receivedItemsReducer = (state = RECEIVED_OBJ , action) => {\n    let newReceivedItems = [];\n    switch(action.type){\n        case RECEIVE_ITEM:\n            newReceivedItems = [...state.receivedItems];\n            newReceivedItems.push(action.payload);\n            return {\n                receivedItems:newReceivedItems\n              }\n        default: \n            return state\n    }\n    return state;\n}\nexport default receivedItemsReducer;","import { ADD_ITEM, REMOVE_ITEM} from '../actions';\n\nconst ITEMS_OBJ = {\n    listItems: [],\n  };\n\nconst listItemsReducer = (state = ITEMS_OBJ , action) => {\n    let newItems = [];\n    switch(action.type){\n        case ADD_ITEM:\n            newItems = [...state.listItems];\n            newItems.push(action.payload);\n            return {\n                listItems: \n                    newItems               \n              }\n            \n        case REMOVE_ITEM:\n            newItems = [...state.listItems];\n            newItems = newItems.filter(item => item.id !== action.payload.id);\n            return {\n                listItems: newItems\n              };\n            return {\n                listItems: [\n                  ...state.listItems,\n                  {\n                    ...state.receivedItems,\n                    listItems: newItems\n                  },\n                ],\n              }\n        default: \n            return state\n    }\n    return state;\n}\nexport default listItemsReducer;\n","import { UPDATE_CURRENCY} from '../actions';\n\nconst CURRENCY_OBJ = {\n    currency: -1,\n  };\n\n  const currencyReducer = (state = CURRENCY_OBJ , action) => {\n    switch(action.type){\n        case UPDATE_CURRENCY:    \n            return{\n                currency: action.payload,\n            };\n        default: \n            return state\n    }\n    return state;\n} \n\nexport default currencyReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport receivedItemsReducer from './reducers/receivedItemsReducer';\nimport listItemsReducer from './reducers/listItemsReducer';\nimport currencyReducer from './reducers/currencyReducer';\n\n\nexport const reducer = combineReducers({\n  list: listItemsReducer,\n  received: receivedItemsReducer,\n  currency: currencyReducer,\n});\n\nconst configStorage = {\n  key: 'root',\n  storage,\n  whitelist: ['list','received']\n};\n\nexport default persistReducer(configStorage, reducer);","import { createStore } from 'redux';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './reducer';\n\nexport const store = createStore(rootReducer);\n\nexport const persistor = persistStore(store);\n\nexport default {\n  store,\n  persistor\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={App}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}